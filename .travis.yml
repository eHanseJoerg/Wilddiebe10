---
sudo: required
language: python
python: "2.7"

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y curl make

install:
  - pip install ansible

script:
  # Change working directory
  - "pushd ansible > /dev/null"

  # Run syntax-checks via makefile
  - "make syntax-checks"

  # Run the role/playbook via makefile
  - "make ci"

  # Run the role/playbook again to make sure it's idempotent
  - >
    make ci | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Return to starting directory
  - "popd > /dev/null"

  # Check if rsyslog port 10514 is open
  - >
    sudo iptables -L -n
    | grep -q "ACCEPT.*dpt:10514"
    && (echo 'Port 10514 is open - pass' && exit 0)
    || (echo 'Port 10514 is not open - fail' && exit 1)

  # Check if samba port 445 is open
  - >
    sudo iptables -L -n
    | grep -q "ACCEPT.*dpt:445"
    && (echo 'Port 445 is open - pass' && exit 0)
    || (echo 'Port 445 is not open - fail' && exit 1)

  # Check if ssh port 22 is open
  - >
    sudo iptables -L -n
    | grep -q "ACCEPT.*dpt:22"
    && (echo 'Port 22 is open - pass' && exit 0)
    || (echo 'Port 22 is not open - fail' && exit 1)

  # Check expected users will be created
  - >
    getent passwd | grep -q 'test-user-present'
    && (echo 'User test-user-present is present - pass' && exit 0)
    || (echo 'User test-user-present is not present' && exit 1)

  # Check users will member of expected groups
  - >
    id test-user-present | grep 'users' | grep 'sudo' | grep -q 'sshlogin'
    && (echo 'User test-user-present is member of expected groups - pass' && exit 0)
    || (echo 'User test-user-present is not member of expected groups.' && exit 1)

  # Check users will be member of the expected primary group
  - >
    id test-user-present | grep -q -E "gid=.*\(test-sued\)"
    && (echo 'User test-user-present is member of the expected primary group - pass' && exit 0)
    || (echo 'User test-user-present is not member of expected primary group.' && exit 1)

  # Check if user homes got the expected permissions
  - >
    ls -al /home/ | grep test-user-present | grep -E "^drwx------.+"
    && (echo 'Folder /home/test-user-present has mode 0700 - pass' && exit 0)
    || (echo 'Folder /home/test-user-present hat not mode 0700.' && exit 1)

  # Check if groupuser homes got the expected permissions
  - >
    ls -al /home/ | grep test-sued | grep -E "^drwxrwx---.+"
    && (echo 'Folder /home/test-sued has mode 0770 - pass' && exit 0)
    || (echo 'Folder /home/test-sued has not mode 0770.' && exit 1)

  # Check expected groups will be created
  - >
    getent group | grep -q 'test-group-present'
    && (echo 'User test-group-present is present - pass' && exit 0)
    || (echo 'User test-group-present is not present' && exit 1)

  # Check if ssh service is up and running
  - >
    sudo service ssh status
    && (echo 'Service ssh is running - pass' && exit 0)
    || (echo 'Service ssh is not running - fail' && exit 1)

  # Check if samba service is up and running
  - >
    sudo service smbd status
    && (echo 'Service smbd is running - pass' && exit 0)
    || (echo 'Service smbd is not running - fail' && exit 1)

  # Check if samba group share is present
  - >
    grep -E -q '\[test-sued\]' /etc/samba/smb.conf
    && (echo 'Share /home/test-sued is present - pass' && exit 0)
    || (echo 'Share /home/test-sued is not present - fail' && exit 1)

  # Check if rsyslog service is up and running
  - >
    sudo service rsyslog status
    && (echo 'Service rsyslog is running - pass' && exit 0)
    || (echo 'Service rsyslog is not running - fail' && exit 1)

  # Check if nmbd service is disabled
  - >
    sudo service nmbd status
    || (echo 'Service nmbd is not running - pass' && exit 1)
    && (echo 'Service nmbd is running - fail' && exit 0)

  # Check if openntpd service is up and running
  - >
    sudo service openntpd status
    && (echo 'Service openntpd is running - pass' && exit 0)
    || (echo 'Service openntpd is not running - fail' && exit 1)

  # Check if quotas are enabled
  - >
    sudo quotaon -up / ;
    if [ $? -eq 1 ]; then (echo 'Quotas are enabled - pass' && exit 0);
    else (echo 'Quotas are disabled - fail' && exit 1); fi

  # Check if quota limits are set as expected
  - >
    sudo quotatool -d -u test-user-present / \
    | awk '{ if ($4 == 102400 && $5 == 153600) exit 0; exit 1}' \
    && sudo quotatool -d -u test-sued / \
    | awk '{ if ($4 == 102400 && $5 == 153600) exit 0; exit 1}' \
    && (echo 'Quota limits are set as expected - pass' && exit 0) \
    || (echo 'Quota limits are not set as expected - fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
